Patch to embed hotkeys and symbol property in component XML.
Index: ibus-m17n-1.3.2/configure.ac
===================================================================
--- ibus-m17n-1.3.2.orig/configure.ac
+++ ibus-m17n-1.3.2/configure.ac
@@ -122,6 +122,9 @@ AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GET
 AM_GNU_GETTEXT([external])
 AM_GNU_GETTEXT_VERSION(0.16.1)
 
+# hotkeys in component xml
+IBUS_WITH_HOTKEYS
+
 
 # OUTPUT files
 AC_CONFIG_FILES([ po/Makefile.in
Index: ibus-m17n-1.3.2/m4/ibus.m4
===================================================================
--- /dev/null
+++ ibus-m17n-1.3.2/m4/ibus.m4
@@ -0,0 +1,52 @@
+# IBUS_WITH_HOTKEYS([DEFAULT])
+AC_DEFUN([IBUS_WITH_HOTKEYS], [
+  IBUS_HOTKEYS_DEFAULT=m4_default([$1], [Control+space,Zenkaku_Hankaku])
+  AC_ARG_WITH(hotkeys,
+    [AC_HELP_STRING([--with-hotkeys=HOTKEYS],
+    [Use hotkeys for ibus bridge mode. (available value: yes/no/keys)])],
+    [with_hotkeys="$withval"],
+    [with_hotkeys="no"])
+  if test x$with_hotkeys = xno; then
+    IBUS_HOTKEYS_XML="<!-- <hotkeys>${IBUS_HOTKEYS_DEFAULT}</hotkeys> -->"
+  elif test x$with_hotkeys = xyes -o x$with_hotkeys = x; then
+    IBUS_HOTKEYS="$IBUS_HOTKEYS_DEFAULT"
+    IBUS_HOTKEYS_XML="<hotkeys>${IBUS_HOTKEYS}</hotkeys>"
+  else
+    IBUS_HOTKEYS="$with_hotkeys"
+    IBUS_HOTKEYS_XML="<hotkeys>${IBUS_HOTKEYS}</hotkeys>"
+  fi
+  if test x$IBUS_HOTKEYS != x; then
+    AC_DEFINE_UNQUOTED(IBUS_IBUS_HOTKEYS, ["$IBUS_HOTKEYS"],
+      [IME specific hotkeys for IBus])
+    AC_SUBST(IBUS_HOTKEYS)
+  fi
+  AC_SUBST(IBUS_HOTKEYS_XML)
+])
+
+# IBUS_SET_SYMBOL(SYMBOL)
+AC_DEFUN([IBUS_SET_SYMBOL], [
+  IBUS_SYMBOL="$1"
+  if test x$PYTHON = x; then
+    AM_PATH_PYTHON([2.5])
+  fi
+  AC_MSG_CHECKING([if ibus supports icon symbol])
+  $PYTHON <<_IBUS_SYMBOL_TEST
+import ibus
+engine = ibus.EngineDesc('test')
+exit(not hasattr(engine, 'symbol'))
+_IBUS_SYMBOL_TEST
+  if test $? -eq 0; then
+    IBUS_SYMBOL_XML="<symbol>${IBUS_SYMBOL}</symbol>"
+    AC_MSG_RESULT([yes])
+  else
+    IBUS_SYMBOL_XML="<!-- <symbol>${IBUS_SYMBOL}</symbol> -->"
+    IBUS_SYMBOL=
+    AC_MSG_RESULT([no])
+  fi
+  if test x$IBUS_SYMBOL != x; then
+    AC_DEFINE_UNQUOTED([IBUS_SYMBOL], ["$IBUS_SYMBOL"],
+      [Icon symbol string for IBus])
+    AC_SUBST(IBUS_SYMBOL)
+  fi
+  AC_SUBST(IBUS_SYMBOL_XML)
+])
--- ibus-m17n-1.3.4/src/default.xml.in.in.orig	2012-09-16 08:53:48.583647692 +0200
+++ ibus-m17n-1.3.4/src/default.xml.in.in	2012-09-16 09:00:43.100305721 +0200
@@ -11,6 +11,7 @@
 		<rank>0</rank>
 		<preedit-highlight>FALSE</preedit-highlight>
 		<symbol></symbol>
+		@IBUS_HOTKEYS_XML@
 	</engine>
 	<!-- Indic engines should be selected by default:
 	     https://bugzilla.redhat.com/show_bug.cgi?id=640896 -->
--- ibus-m17n-1.3.4/src/m17nutil.c.orig	2012-09-16 08:53:48.576981023 +0200
+++ ibus-m17n-1.3.4/src/m17nutil.c	2012-09-16 10:01:33.243562973 +0200
@@ -136,6 +136,7 @@ ibus_m17n_engine_new (MSymbol  lang,
                                            "layout",      "us",
                                            "rank",        config->rank,
                                            "symbol",      config->symbol ? config->symbol : "",
+                                           "hotkeys",     config->hotkeys ? config->hotkeys : "",
                                            "setup",       engine_setup,
                                            NULL);
 
@@ -310,6 +311,10 @@ ibus_m17n_engine_config_parse_xml_node (
             cnode->mask |= ENGINE_CONFIG_SYMBOL_MASK;
             continue;
         }
+        if (g_strcmp0 (sub_node->name , "hotkeys") == 0) {
+            cnode->config.hotkeys = g_strdup (sub_node->text);
+            continue;
+        }
         if (g_strcmp0 (sub_node->name , "longname") == 0) {
             cnode->config.longname = g_strdup (sub_node->text);
             cnode->mask |= ENGINE_CONFIG_LONGNAME_MASK;
--- ibus-m17n-1.3.4/src/m17nutil.h.orig	2012-09-16 08:53:48.580314357 +0200
+++ ibus-m17n-1.3.4/src/m17nutil.h	2012-09-16 09:06:33.490298415 +0200
@@ -17,6 +17,9 @@ struct _IBusM17NEngineConfig {
     /* symbol */
     gchar *symbol;
 
+    /* hotkeys */
+    gchar *hotkeys;
+
     /* overridding longname shown on panel */
     gchar *longname;
 
